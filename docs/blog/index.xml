<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Blog on DevOps Architect</title>
    <link>https://shashank-ssriva.github.io/blog/</link>
    <description>Recent content in Blog on DevOps Architect</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Copyright Â© 2022, Christian Engel, all rights reserved.</copyright>
    <lastBuildDate>Thu, 01 Sep 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://shashank-ssriva.github.io/blog/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Consolite - Flask-based UI tool to display EC2 server details with caching support</title>
      <link>https://shashank-ssriva.github.io/blog/consolite/</link>
      <pubDate>Thu, 01 Sep 2022 00:00:00 +0000</pubDate>
      
      <guid>https://shashank-ssriva.github.io/blog/consolite/</guid>
      <description>Link Key features: No need to login to AWS Console to get server info like IP address or hostname, etc. Fast &amp;amp; lightweight. Lets you copy the IP address &amp;amp; server name with a click, just like AWS Console. Superfast, real-time search. Search for any server using its name or type. Safe. Doesn&amp;rsquo;t store any data in a database or file. Interactive, colorful charts to summarize data. Shows CPU/Memory &amp;amp; Cost info of each server.</description>
    </item>
    
    <item>
      <title>Ansible playbook for Kubernetes cluster</title>
      <link>https://shashank-ssriva.github.io/blog/ansible-playbook-kubernetes/</link>
      <pubDate>Fri, 12 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>https://shashank-ssriva.github.io/blog/ansible-playbook-kubernetes/</guid>
      <description>An Ansible playbook to automatically provision a Kubernetes cluster on CentOS 7 servers.
Detailed tutorial here :- https://shashanksrivastava.medium.com/use-ansible-to-automatically-provision-a-kubernetes-cluster-on-centos-7-servers-64090762e590
GitHub repo: https://github.com/shashank-ssriva/Ansible-playbook-for-Kubernetes-cluster</description>
    </item>
    
    <item>
      <title>My Travel Tracker</title>
      <link>https://shashank-ssriva.github.io/blog/flask-travel-tracker/</link>
      <pubDate>Mon, 01 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>https://shashank-ssriva.github.io/blog/flask-travel-tracker/</guid>
      <description>A simple Python 3/Flask web-app to track my flights details. Flight data is stored in a MySQL database &amp;amp; displayed in form of tables &amp;amp; charts.
Technologies used:
Backend - Python3/Flask Frontend - Bootstrap MySQL Chart.js GitHub repo: https://github.com/shashank-ssriva/My-Travel-Tracker</description>
    </item>
    
    <item>
      <title>MyMusicStats</title>
      <link>https://shashank-ssriva.github.io/blog/mymusicstats/</link>
      <pubDate>Wed, 18 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://shashank-ssriva.github.io/blog/mymusicstats/</guid>
      <description>Link Introduction: My first ever attempt at writing JavaScript code.
MyMusicStats is a fully responsive web-app to dive deep into your Last.fm stats. Simply enter your Last.fm username &amp;amp; press Submit button. Written purely in JavaScript, the app works on the client side, so no data is saved or collected. There is no backend server to process data.
Link Features: Quickly &amp;amp; comprehensively visualise your music data. Discover interesting information about your listening habits.</description>
    </item>
    
    <item>
      <title>REST To Do - Create a REST API Using PHP &amp; MySQL</title>
      <link>https://shashank-ssriva.github.io/blog/rest-to-do/</link>
      <pubDate>Mon, 14 May 2018 00:00:00 +0000</pubDate>
      
      <guid>https://shashank-ssriva.github.io/blog/rest-to-do/</guid>
      <description>Link Introduction: Writing this code helped me create another API to perform the integration of a Service Desk tool with XL Release. Below is what the GET request looks like.
{ https://localhost/~admin/REST-TO-DO/info?task=Write Code } The response returned is.
{ &amp;#34;status&amp;#34;: 1, &amp;#34;info&amp;#34;: [ { &amp;#34;Task&amp;#34;: &amp;#34;Write Code&amp;#34;, &amp;#34;Date&amp;#34;: &amp;#34;18/06/2019&amp;#34;, &amp;#34;Priority&amp;#34;: &amp;#34;1&amp;#34; } ] } Detailed Medium article: https://shashanksrivastava.medium.com/create-a-rest-api-using-php-mysql-60ba1ad918d2</description>
    </item>
    
  </channel>
</rss>
